{"version":3,"sources":["fbase.tsx","components/Jweet.tsx","components/JweetFactory.tsx","routes/Home.tsx","components/AuthForm.tsx","routes/Auth.tsx","routes/Profile.tsx","components/Navigation.tsx","components/Router.tsx","components/GlobalStyles.tsx","components/App.tsx","index.tsx"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Container","styled","div","Text","Time","Image","img","ButtonList","Button","button","Form","form","TextArea","textarea","Input","input","UpdateLabel","label","CancelButton","Jweet","jweetObj","isOwner","useState","editing","setEditing","text","newJweet","setNewJweet","createdAt","Date","toLocaleString","toggleEditing","prev","onSubmit","event","preventDefault","doc","id","update","placeholder","required","onChange","value","currentTarget","htmlFor","icon","faPaperPlane","type","onClick","faBan","faPencilAlt","window","confirm","delete","faTrashAlt","creatorName","attachmentUrl","src","InputText","Tab","TextTab","Clear","AttachLabel","SubmitLabel","JweetFactory","userObj","jweet","setJweet","attachment","setAttachment","a","attachmentRef","ref","child","uid","uuidv4","putString","attachmentRes","getDownloadURL","now","creatorId","displayName","collection","add","max","faPlus","accept","files","theFile","reader","FileReader","onloadend","result","toString","readAsDataURL","size","Home","jweets","setJweets","useEffect","orderBy","onSnapshot","snapshot","jweetArray","docs","forEach","jweetData","data","push","map","Submit","SignOrCreate","span","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","Logo","Buttons","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","faTwitter","faGoogle","faGithub","List","ul","Item","li","Profile","refreshUser","newDisplayName","setNewDisplayName","jweetList","setJweetList","history","useHistory","updateProfile","alert","getMyJweets","where","get","maxLength","signOut","index","nav","SLink","Link","IconText","Navigation","to","faHouseUser","faUser","AppRouter","isLoggedIn","exact","path","GlobalStyles","createGlobalStyle","reset","Footer","footer","Loader","App","init","setInit","setUserObj","onAuthStateChanged","user","Boolean","currentUser","spin","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAcAA,IAASC,cATc,CACrBC,OAAQC,0CACRC,WAAYD,gCACZE,UAAWF,gBACXG,cAAeH,4BACfI,kBAAmBJ,eACnBK,MAAOL,8CAKF,I,iGAAMM,GAAmBT,IAEnBU,GAAcV,IAASW,OAEvBC,GAAYZ,IAASa,YAErBC,GAAiBd,IAASe,U,2CCbjCC,GAAYC,KAAOC,IAAV,kQAWTC,GAAOF,KAAOC,IAAV,8LASJE,GAAOH,KAAOC,IAAV,wHAMJG,GAAQJ,KAAOK,IAAV,mKASLC,GAAaN,KAAOC,IAAV,sEAIVM,GAASP,KAAOQ,OAAV,sFAKNC,GAAOT,KAAOU,KAAV,2HAOJC,GAAWX,KAAOY,SAAV,qJASRC,GAAQb,KAAOc,MAAV,8CAGLC,GAAcf,KAAOgB,MAAV,4LAUXC,GAAejB,KAAOQ,OAAV,oHAqFHU,GAzED,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,QAAsB,EACjBC,oBAAS,GADQ,mBACxCC,EADwC,KAC/BC,EAD+B,OAEfF,mBAASF,EAASK,MAFH,mBAExCC,EAFwC,KAE9BC,EAF8B,KAGzCC,EAAY,IAAIC,KAAKT,EAASQ,WAAWE,iBAEzCC,EAAgB,kBAAMP,GAAW,SAACQ,GAAD,OAAWA,MAqBlD,OACE,qCACGT,EACC,eAACvB,GAAD,UACE,gBAACU,GAAD,CAAMuB,SAxBG,SAACC,GAChBA,EAAMC,iBACNvC,GAAUwC,IAAV,iBAAwBhB,EAASiB,KAAMC,OAAO,CAC5Cb,KAAMC,IAERF,GAAW,IAmBL,UACE,eAACZ,GAAD,CACE2B,YAAY,kBACZC,UAAQ,EACRC,SArBK,SAACP,GAA2C,IAExCQ,EACfR,EADFS,cAAiBD,MAEnBf,EAAYe,IAkBFA,MAAOhB,IAET,gBAACnB,GAAD,WACE,eAACS,GAAD,CAAa4B,QAAQ,SAArB,SACE,eAAC,KAAD,CAAiBC,KAAMC,SAEzB,eAAChC,GAAD,CAAOuB,GAAG,SAASU,KAAK,WACxB,eAAC7B,GAAD,CAAc8B,QAASjB,EAAvB,SACE,eAAC,KAAD,CAAiBc,KAAMI,iBAM/B,gBAACjD,GAAD,WACE,gBAACG,GAAD,WACGiB,EAASK,KACTJ,GACC,gBAACd,GAAD,WACE,eAACC,GAAD,CAAQwC,QAASjB,EAAjB,SACE,eAAC,KAAD,CAAiBc,KAAMK,SAEzB,eAAC1C,GAAD,CAAQwC,QAtCA,WACTG,OAAOC,QAAQ,8CAExBxD,GAAUwC,IAAV,iBAAwBhB,EAASiB,KAAMgB,UAmC7B,SACE,eAAC,KAAD,CAAiBR,KAAMS,eAK/B,gBAAClD,GAAD,iBACMgB,EAASmC,YADf,OACgC3B,KAE/BR,EAASoC,eAAiB,eAACnD,GAAD,CAAOoD,IAAKrC,EAASoC,sB,sCCvJpD9C,GAAOT,KAAOU,KAAV,yHAMJG,GAAQb,KAAOc,MAAV,8CAGL2C,GAAYzD,KAAOc,MAAV,gIAQT4C,GAAM1D,KAAOC,IAAV,yJAOH0D,GAAU3D,KAAOC,IAAV,qMASP2D,GAAQ5D,KAAOQ,OAAV,qFAKLJ,GAAQJ,KAAOK,IAAV,qFAKLwD,GAAc7D,KAAOgB,MAAV,kIAOX8C,GAAc9D,KAAOgB,MAAV,6MA6GF+C,GA9FM,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,QAAsB,EAClB3C,mBAAS,IADS,mBACrC4C,EADqC,KAC9BC,EAD8B,OAER7C,mBAAiB,IAFT,mBAErC8C,EAFqC,KAEzBC,EAFyB,KAItCpC,EAAQ,yCAAG,WAAOC,GAAP,sBAAAoC,EAAA,yDACfpC,EAAMC,iBACQ,KAAV+B,EAFW,oDAIXV,EAAgB,IAChBY,EALW,wBAMPG,EAAgBzE,GACnB0E,MACAC,MAFmB,iBAEVR,QAFU,IAEVA,OAFU,EAEVA,EAASS,IAFC,YAEMC,iBARf,SASeJ,EAAcK,UACxCR,EACA,YAXW,cASPS,EATO,iBAaUA,EAAcL,IAAIM,iBAb5B,QAabtB,EAba,sBAgBTpC,EAAqB,CACzBK,KAAMyC,EACNtC,UAAWC,KAAKkD,MAChBC,WAAkB,OAAPf,QAAO,IAAPA,OAAA,EAAAA,EAASS,MAAO,GAC3BnB,aAAoB,OAAPU,QAAO,IAAPA,OAAA,EAAAA,EAASgB,cAAe,GACrCzB,iBArBa,UAuBT5D,GAAUsF,WAAW,UAAUC,IAAI/D,GAvB1B,QAwBfiD,EAAc,IACdF,EAAS,IAzBM,4CAAH,sDAqDd,OACE,gBAAC,GAAD,CAAMlC,SAAUA,EAAhB,UACE,gBAAC2B,GAAD,WACE,eAACF,GAAD,CACEjB,SA7BS,SAACP,GAAwC,IAErCQ,EACfR,EADFS,cAAiBD,MAEnByB,EAASzB,IA0BHA,MAAOwB,EACPnB,KAAK,OACLR,YAAY,yBACZ6C,IAAK,MAEP,eAACrB,GAAD,CAAanB,QAAQ,SAArB,SACE,eAAC,KAAD,CAAiBC,KAAMC,SAEzB,eAAC,GAAD,CAAOT,GAAG,SAASU,KAAK,SAASL,MAAM,aAEzC,gBAACoB,GAAD,CAAalB,QAAQ,cAArB,UACE,eAAC,KAAD,CAAiBC,KAAMwC,OACvB,kDAEF,eAAC,GAAD,CACEhD,GAAG,cACHU,KAAK,OACLuC,OAAO,UACP7C,SAzCe,SAACP,GAAwC,IAEzCqD,EACfrD,EADFS,cAAiB4C,MAEbC,GAAe,OAALD,QAAK,IAALA,OAAA,EAAAA,EAAQ,KAAM,KAC9B,GAAKC,EAAL,CACA,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,WAAO,IAChBC,EAAWH,EAAXG,OACRvB,GAAoB,OAANuB,QAAM,IAANA,OAAA,EAAAA,EAAQC,aAAc,KAEtCJ,EAAOK,cAAcN,OAgClBpB,GACC,gBAACT,GAAD,WACE,eAAC,GAAD,CAAOF,IAAKW,IACZ,eAACP,GAAD,CAAOb,QAhCW,WACxBqB,EAAc,KA+BR,SACE,eAAC,KAAD,CAAiBxB,KAAMS,KAAYyC,KAAK,gBCvJ9C/F,GAAYC,KAAOC,IAAV,4IA2CA8F,GAlCF,SAAC,GAAyB,IAAvB/B,EAAsB,EAAtBA,QAAsB,EACR3C,mBAAqB,IADb,mBAC7B2E,EAD6B,KACrBC,EADqB,KAoBpC,OAjBAC,qBAAU,WACRvG,GACGsF,WAAW,UACXkB,QAAQ,YAAa,QACrBC,YAAW,SAACC,GACX,IAAMC,EAAyB,GAC/BD,EAASE,KAAKC,SAAQ,SAACrE,GACrB,IAAMsE,EAAS,aACbrE,GAAID,EAAIC,IACLD,EAAIuE,QAETJ,EAAWK,KAAKF,MAElBR,EAAUK,QAEb,IAGD,gBAAC,GAAD,WACE,eAAC,GAAD,CAActC,QAASA,IACtBgC,EAAOY,KAAI,SAAC3C,GAAD,OACV,eAAC,GAAD,CAEE9C,SAAU8C,EACV7C,QAAS6C,EAAMc,YAAcf,EAAQS,KAFhCR,EAAM7B,WCxCfrC,GAAYC,KAAOC,IAAV,iEAKTQ,GAAOT,KAAOU,KAAV,yEAKJG,GAAQb,KAAOc,MAAV,iOAWL+F,GAAS7G,KAAOc,MAAV,sNAWNgG,GAAe9G,KAAO+G,KAAV,iJAoEHC,GA7DE,WAAO,IAAD,EACK3F,mBAAS,IADd,mBACd4F,EADc,KACPC,EADO,OAEW7F,mBAAS,IAFpB,mBAEd8F,EAFc,KAEJC,EAFI,OAGe/F,oBAAS,GAHxB,mBAGdgG,EAHc,KAGFC,EAHE,OAIKjG,mBAAS,IAJd,mBAIdkG,EAJc,KAIPC,EAJO,KAKfhF,EAAW,SAACP,GAAwC,IAAD,EAGnDA,EADFS,cAAiB+E,EAFoC,EAEpCA,KAAMhF,EAF8B,EAE9BA,MAEZ,UAATgF,EACFP,EAASzE,GACS,aAATgF,GACTL,EAAY3E,IAGVT,EAAQ,yCAAG,WAAOC,GAAP,UAAAoC,EAAA,yDACfpC,EAAMC,iBADS,UAGTmF,EAHS,gCAIL5H,GAAYiI,+BAA+BT,EAAOE,GAJ7C,6CAML1H,GAAYkI,2BAA2BV,EAAOE,GANzC,yDASbK,EAAS,KAAMI,SATF,0DAAH,sDAcd,OACE,gBAAC,GAAD,WACE,gBAAC,GAAD,CAAM5F,SAAUA,EAAhB,UACE,eAAC,GAAD,CACEyF,KAAK,QACL3E,KAAK,QACLR,YAAY,QACZG,MAAOwE,EACPzE,SAAUA,EACVD,UAAQ,IAEV,eAAC,GAAD,CACEkF,KAAK,WACL3E,KAAK,WACLR,YAAY,WACZG,MAAO0E,EACP3E,SAAUA,EACVD,UAAQ,IAEV,eAACsE,GAAD,CACE/D,KAAK,SACLL,MAAO4E,EAAa,iBAAmB,YAExCE,KAEH,eAACT,GAAD,CAAc/D,QA3BI,kBAAMuE,GAAc,SAACvF,GAAD,OAAWA,MA2BjD,SACGsF,EAAa,UAAY,uB,SCxF5BtH,GAAYC,KAAOC,IAAV,sIAOT4H,GAAO7H,KAAOC,IAAV,yIAOJ6H,GAAU9H,KAAOC,IAAV,yKAQPM,GAASP,KAAOQ,OAAV,0PA4CGuH,GAjCF,WACX,IAAMC,EAAa,yCAAG,WAAO/F,GAAP,kBAAAoC,EAAA,yDAKP,YAHMoD,EACfxF,EADFS,cAAiB+E,MAIjBQ,EAAW,IAAIzI,GAAiBE,KAAKwI,mBACnB,WAATT,IACTQ,EAAW,IAAIzI,GAAiBE,KAAKyI,oBARnB,KAUpBF,GAVoB,qCAUDxI,GAAY2I,gBAAgBH,GAV3B,2CAAH,sDAYnB,OACE,gBAAC,GAAD,WACE,eAACJ,GAAD,UACE,eAAC,KAAD,CAAiBjF,KAAMyF,KAAWvC,KAAK,SAEzC,eAAC,GAAD,IACA,gBAACgC,GAAD,WACE,gBAAC,GAAD,CAAQ/E,QAASiF,EAAeP,KAAK,SAArC,iCAEE,eAAC,KAAD,CAAiB7E,KAAM0F,KAAUxC,KAAK,UAExC,gBAAC,GAAD,CAAQ/C,QAASiF,EAAeP,KAAK,SAArC,iCAEE,eAAC,KAAD,CAAiB7E,KAAM2F,KAAUzC,KAAK,iBC/D1C/F,GAAYC,KAAOC,IAAV,uHAOTQ,GAAOT,KAAOU,KAAV,6LAQJ+C,GAAYzD,KAAOc,MAAV,kIAOT+F,GAAS7G,KAAOc,MAAV,kJAONP,GAASP,KAAOQ,OAAV,4IAONgI,GAAOxI,KAAOyI,GAAV,8GAMJC,GAAO1I,KAAO2I,GAAV,uIA0EKC,GA9DC,SAAC,GAAsC,IAApC5E,EAAmC,EAAnCA,QAAS6E,EAA0B,EAA1BA,YAA0B,EACRxH,mBAC1C2C,EAAQgB,aAAe,IAF2B,mBAC7C8D,EAD6C,KAC7BC,EAD6B,OAIlB1H,mBAAqB,IAJH,mBAI7C2H,EAJ6C,KAIlCC,EAJkC,KAK9CC,EAAUC,cAWVnH,EAAQ,yCAAG,WAAOC,GAAP,UAAAoC,EAAA,yDACfpC,EAAMC,iBACF8B,EAAQgB,cAAgB8D,EAFb,iEAGT9E,EAAQoF,cAAcN,GAHb,OAIfO,MAAM,iCAAD,OAAkCP,EAAlC,QACLD,IALe,2CAAH,sDAQRS,EAAW,yCAAG,+BAAAjF,EAAA,sEACG1E,GAClBsF,WAAW,UACXsE,MAAM,YAAa,KAAMvF,EAAQS,KACjC0B,QAAQ,YAAa,QACrBqD,MALe,OACZxD,EADY,OAMZM,EAAyB,GAC/BN,EAAOO,KAAKC,SAAQ,SAACrE,GACnBmE,EAAWK,KAAX,aAAkBvE,GAAI4B,EAAQS,KAAQtC,EAAIuE,YAE5CuC,EAAa3C,GAVK,2CAAH,qDAejB,OAHAJ,qBAAU,WACRoD,MACC,IAED,gBAAC,GAAD,WACE,gBAAC,GAAD,CAAMtH,SAAUA,EAAhB,UACE,eAAC,GAAD,CACEc,KAAK,OACLR,YAAY,eACZG,MAAOqG,EACPtG,SApCS,SAACP,GAAwC,IAErCQ,EACfR,EADFS,cAAiBD,MAEnBsG,EAAkBtG,IAiCZgH,UAAW,KAEb,eAAC,GAAD,CAAQ3G,KAAK,SAASL,MAAM,mBAC5B,eAAC,GAAD,CAAQM,QA5CQ,WACpBtD,GAAYiK,UACZR,EAAQvC,KAAK,MA0CT,wBAGF,eAAC6B,GAAD,UACGQ,EAAUpC,KAAI,SAAC3C,EAAO0F,GAAR,OACb,eAACjB,GAAD,UAAmBzE,EAAMzC,MAAdmI,YC3Gf5J,GAAYC,KAAO4J,IAAV,0BACTpB,GAAOxI,KAAOyI,GAAV,iJAOJC,GAAO1I,KAAO2I,GAAV,uFAMJkB,GAAQ7J,aAAO8J,IAAP9J,CAAH,wIAOL+J,GAAW/J,KAAO+G,KAAV,wEAqCCiD,GA5BI,SAAC,GAAyB,IAAvBhG,EAAsB,EAAtBA,QACpB,OACE,eAAC,GAAD,UACE,gBAAC,GAAD,WACE,eAAC,GAAD,UACE,eAAC,IAAD,CAAMiG,GAAG,IAAT,SACE,eAAC,KAAD,CAAiBrH,KAAMyF,KAAWvC,KAAK,WAG3C,eAAC,GAAD,UACE,gBAAC+D,GAAD,CAAOI,GAAG,IAAV,UACE,eAAC,KAAD,CAAiBrH,KAAMsH,KAAapE,KAAK,OACzC,eAACiE,GAAD,wBAGJ,eAAC,GAAD,UACE,gBAACF,GAAD,CAAOI,GAAG,WAAV,UACE,eAAC,KAAD,CAAiBrH,KAAMuH,KAAQrE,KAAK,OACpC,eAACiE,GAAD,WACU,OAAP/F,QAAO,IAAPA,OAAA,EAAAA,EAASgB,aAAchB,EAAQgB,YAAc,uBCpB7CoF,GAxBG,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,WAAYrG,EAAmC,EAAnCA,QAAS6E,EAA0B,EAA1BA,YACxC,OACE,gBAAC,IAAD,WACGwB,GAAc,eAAC,GAAD,CAAYrG,QAASA,IACpC,eAAC,IAAD,UACGqG,GAAcrG,EACb,uCACE,eAAC,IAAD,CAAOsG,OAAK,EAACC,KAAK,IAAlB,SACE,eAAC,GAAD,CAAMvG,QAASA,MAEjB,eAAC,IAAD,CAAOsG,OAAK,EAACC,KAAK,WAAlB,SACE,eAAC,GAAD,CAASvG,QAASA,EAAS6E,YAAaA,SAI5C,eAAC,IAAD,CAAOyB,OAAK,EAACC,KAAK,IAAlB,SACE,eAAC,GAAD,Y,SC0BGC,GAnDMC,aAAH,2qCAEZC,MCGA3K,GAAYC,KAAOC,IAAV,4IAOT0K,GAAS3K,KAAO4K,OAAV,mGAKNC,GAAS7K,KAAOC,IAAV,8JA0DG6K,GAlDH,WAAO,IAAD,EACQzJ,oBAAS,GADjB,mBACT0J,EADS,KACHC,EADG,OAEc3J,mBAAyB,MAFvC,mBAET2C,EAFS,KAEAiH,EAFA,KAIhB/E,qBAAU,WACRzG,GAAYyL,oBAAmB,SAACC,GAC9BF,EACEE,EACI,CACEnG,YAAamG,EAAKnG,YAClBP,IAAK0G,EAAK1G,IACV2E,cAAe,SAACpE,GAAD,OACbmG,EAAK/B,cAAc,CAAEpE,kBAEzB,MAENgG,GAAQ,QAET,IAWH,OACE,uCACE,gBAAC,GAAD,WACGD,EACC,eAAC,GAAD,CACEV,WAAYe,QAAQpH,GACpBA,QAASA,EACT6E,YAjBU,WAClB,IAAMsC,EAAO1L,GAAY4L,YACpBF,GACLF,EAAW,CACTjG,YAAamG,EAAKnG,aAAe,KACjCP,IAAK0G,EAAK1G,IACV2E,cAAe,SAACpE,GAAD,OACbmG,EAAK/B,cAAc,CAAEpE,sBAanB,eAAC6F,GAAD,UACE,eAAC,KAAD,CAAiBjI,KAAMyF,KAAWiD,MAAM,EAAMxF,KAAK,SAGvD,gBAAC6E,GAAD,oBAAgB,IAAI/I,MAAO2J,cAA3B,iBAEF,eAAC,GAAD,QCpENC,IAASC,OACP,eAAC,IAAMC,WAAP,UACE,eAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bf2eea2a.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\n\nexport const dbService = firebase.firestore();\n\nexport const storageService = firebase.storage();\n","import { useState, FormEvent } from \"react\";\nimport { dbService } from \"fbase\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt } from \"@fortawesome/free-regular-svg-icons\";\nimport { faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport { faBan } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Container = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: flex-start;\n  border: 1px solid rgb(255, 255, 255);\n  margin-bottom: 20px;\n  border-radius: 15px;\n  padding: 5px;\n`;\nconst Text = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  width: 100%;\n  height: 100%;\n  word-break: break-all;\n  padding: 10px 5px;\n`;\nconst Time = styled.div`\n  width: 100%;\n  padding: 0px 5px;\n  padding-bottom: 10px;\n  color: rgb(100, 100, 100);\n`;\nconst Image = styled.img`\n  width: 50px;\n  height: 50px;\n  position: absolute;\n  object-fit: cover;\n  bottom: -10px;\n  right: 0px;\n  border-radius: 25px;\n`;\nconst ButtonList = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst Button = styled.button`\n  padding: 10px;\n  padding-top: 0px;\n  color: #289ae2;\n`;\nconst Form = styled.form`\n  width: 100%;\n  word-break: break-all;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst TextArea = styled.textarea`\n  all: unset;\n  width: 100%;\n  cursor: text;\n  padding: 10px 5px;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\nconst Input = styled.input`\n  display: none;\n`;\nconst UpdateLabel = styled.label`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  padding: 10px;\n  border-radius: 20px;\n  margin: 5px;\n  background-color: #289ae2;\n`;\nconst CancelButton = styled.button`\n  padding: 10px;\n  border-radius: 20px;\n  margin: 5px;\n  background-color: #289ae2;\n`;\n\ninterface IProps {\n  jweetObj: JweetObj;\n  isOwner: boolean;\n}\n\nconst Jweet = ({ jweetObj, isOwner }: IProps) => {\n  const [editing, setEditing] = useState(false);\n  const [newJweet, setNewJweet] = useState(jweetObj.text);\n  const createdAt = new Date(jweetObj.createdAt).toLocaleString();\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    dbService.doc(`jweets/${jweetObj.id}`).update({\n      text: newJweet,\n    });\n    setEditing(false);\n  };\n  const onChange = (event: FormEvent<HTMLTextAreaElement>) => {\n    const {\n      currentTarget: { value },\n    } = event;\n    setNewJweet(value);\n  };\n  const onDeleteClick = () => {\n    const ok = window.confirm(\"Are you sure you wanna delete this Jweet?\");\n    if (ok) {\n      dbService.doc(`jweets/${jweetObj.id}`).delete();\n    }\n  };\n\n  return (\n    <>\n      {editing ? (\n        <Container>\n          <Form onSubmit={onSubmit}>\n            <TextArea\n              placeholder=\"Edit your Jweet\"\n              required\n              onChange={onChange}\n              value={newJweet}\n            />\n            <ButtonList>\n              <UpdateLabel htmlFor=\"update\">\n                <FontAwesomeIcon icon={faPaperPlane} />\n              </UpdateLabel>\n              <Input id=\"update\" type=\"submit\" />\n              <CancelButton onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faBan} />\n              </CancelButton>\n            </ButtonList>\n          </Form>\n        </Container>\n      ) : (\n        <Container>\n          <Text>\n            {jweetObj.text}\n            {isOwner && (\n              <ButtonList>\n                <Button onClick={toggleEditing}>\n                  <FontAwesomeIcon icon={faPencilAlt} />\n                </Button>\n                <Button onClick={onDeleteClick}>\n                  <FontAwesomeIcon icon={faTrashAlt} />\n                </Button>\n              </ButtonList>\n            )}\n          </Text>\n          <Time>\n            By {jweetObj.creatorName} at {createdAt}\n          </Time>\n          {jweetObj.attachmentUrl && <Image src={jweetObj.attachmentUrl} />}\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default Jweet;\n","import { useState, FormEvent } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport { faTrashAlt } from \"@fortawesome/free-regular-svg-icons\";\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  border-radius: 20px;\n`;\nconst Input = styled.input`\n  display: none;\n`;\nconst InputText = styled.input`\n  width: 100%;\n  font-size: 15px;\n  cursor: text;\n  &::placeholder {\n    font-size: 15px;\n  }\n`;\nconst Tab = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  margin: 10px 0px;\n`;\nconst TextTab = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 10px 0px;\n  padding: 5px;\n  border: 1px solid #289ae2;\n  border-radius: 20px;\n`;\nconst Clear = styled.button`\n  padding: 10px;\n  font-size: 16px;\n  color: #289ae2;\n`;\nconst Image = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: 25px;\n`;\nconst AttachLabel = styled.label`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  color: #289ae2;\n  padding: 5px 0px;\n`;\nconst SubmitLabel = styled.label`\n  cursor: pointer;\n  width: 30px;\n  height: 30px;\n  background-color: #289ae2;\n  border-radius: 15px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\ninterface IProps {\n  userObj: UserObj | null;\n}\n\nconst JweetFactory = ({ userObj }: IProps) => {\n  const [jweet, setJweet] = useState(\"\");\n  const [attachment, setAttachment] = useState<string>(\"\");\n\n  const onSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (jweet === \"\") return;\n\n    let attachmentUrl = \"\";\n    if (attachment) {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj?.uid}/${uuidv4()}`);\n      const attachmentRes = await attachmentRef.putString(\n        attachment,\n        \"data_url\"\n      );\n      attachmentUrl = (await attachmentRes.ref.getDownloadURL()) as string;\n    }\n\n    const jweetObj: JweetObj = {\n      text: jweet,\n      createdAt: Date.now(),\n      creatorId: userObj?.uid || \"\",\n      creatorName: userObj?.displayName || \"\",\n      attachmentUrl,\n    };\n    await dbService.collection(\"jweets\").add(jweetObj);\n    setAttachment(\"\");\n    setJweet(\"\");\n  };\n\n  const onChange = (event: FormEvent<HTMLInputElement>) => {\n    const {\n      currentTarget: { value },\n    } = event;\n    setJweet(value);\n  };\n\n  const onFileChange = (event: FormEvent<HTMLInputElement>) => {\n    const {\n      currentTarget: { files },\n    } = event;\n    const theFile = files?.[0] || null;\n    if (!theFile) return;\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      const { result } = reader;\n      setAttachment(result?.toString() || \"\");\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => {\n    setAttachment(\"\");\n  };\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <TextTab>\n        <InputText\n          onChange={onChange}\n          value={jweet}\n          type=\"text\"\n          placeholder=\"What do you think now?\"\n          max={120}\n        />\n        <SubmitLabel htmlFor=\"submit\">\n          <FontAwesomeIcon icon={faPaperPlane} />\n        </SubmitLabel>\n        <Input id=\"submit\" type=\"submit\" value=\"Jweet\" />\n      </TextTab>\n      <AttachLabel htmlFor=\"attach-file\">\n        <FontAwesomeIcon icon={faPlus} />\n        <span>Add Photo </span>\n      </AttachLabel>\n      <Input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n      />\n      {attachment && (\n        <Tab>\n          <Image src={attachment} />\n          <Clear onClick={onClearAttachment}>\n            <FontAwesomeIcon icon={faTrashAlt} size=\"1x\" />\n          </Clear>\n        </Tab>\n      )}\n    </Form>\n  );\n};\n\nexport default JweetFactory;\n","import Jweet from \"components/Jweet\";\nimport JweetFactory from \"components/JweetFactory\";\nimport { dbService } from \"fbase\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\ninterface IProps {\n  userObj: UserObj;\n}\nconst Container = styled.div`\n  margin-top: 20px;\n  height: 100%;\n  overflow-y: scroll;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nconst Home = ({ userObj }: IProps) => {\n  const [jweets, setJweets] = useState<JweetObj[]>([]);\n\n  useEffect(() => {\n    dbService\n      .collection(\"jweets\")\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snapshot) => {\n        const jweetArray: JweetObj[] = [];\n        snapshot.docs.forEach((doc) => {\n          const jweetData = {\n            id: doc.id,\n            ...doc.data(),\n          } as JweetObj;\n          jweetArray.push(jweetData);\n        });\n        setJweets(jweetArray);\n      });\n  }, []);\n\n  return (\n    <Container>\n      <JweetFactory userObj={userObj} />\n      {jweets.map((jweet) => (\n        <Jweet\n          key={jweet.id}\n          jweetObj={jweet}\n          isOwner={jweet.creatorId === userObj.uid}\n        />\n      ))}\n    </Container>\n  );\n};\n\nexport default Home;\n","import { useState, FormEvent } from \"react\";\nimport { authService } from \"fbase\";\nimport styled from \"styled-components\";\nconst Container = styled.div`\n  width: 100%;\n  max-width: 320px;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Input = styled.input`\n  background-color: rgb(255, 255, 255);\n  width: 100%;\n  padding: 5px 10px;\n  margin-bottom: 5px;\n  border-radius: 20px;\n  box-sizing: border-box;\n  cursor: text;\n  color: rgb(20, 20, 20);\n`;\n\nconst Submit = styled.input`\n  width: 100%;\n  padding: 10px 0px;\n  border-radius: 20px;\n  margin-top: 10px;\n  box-sizing: border-box;\n  background-color: #289ae2;\n  display: flex;\n  justify-content: center;\n`;\n\nconst SignOrCreate = styled.span`\n  display: flex;\n  justify-content: center;\n  margin-top: 30px;\n  color: #289ae2;\n  text-decoration: underline;\n`;\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n  const onChange = (event: FormEvent<HTMLInputElement>) => {\n    const {\n      currentTarget: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    try {\n      if (newAccount) {\n        await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  return (\n    <Container>\n      <Form onSubmit={onSubmit}>\n        <Input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={onChange}\n          required\n        />\n        <Input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={onChange}\n          required\n        />\n        <Submit\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n        {error}\n      </Form>\n      <SignOrCreate onClick={toggleAccount}>\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </SignOrCreate>\n    </Container>\n  );\n};\n\nexport default AuthForm;\n","import React, { FormEvent } from \"react\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faGoogle } from \"@fortawesome/free-brands-svg-icons\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\nconst Logo = styled.div`\n  color: #289ae2;\n  display: flex;\n  justify-content: center;\n  margin-bottom: 50px;\n  font-size: 30px;\n`;\nconst Buttons = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 40px;\n`;\nconst Button = styled.button`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 75%;\n  padding: 5px 0px;\n  border-radius: 20px;\n  color: rgb(20, 20, 20);\n  background: rgb(220, 220, 220);\n  margin-bottom: 15px;\n`;\nconst Auth = () => {\n  const onSocialClick = async (event: FormEvent<HTMLButtonElement>) => {\n    const {\n      currentTarget: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    provider && (await authService.signInWithPopup(provider));\n  };\n  return (\n    <Container>\n      <Logo>\n        <FontAwesomeIcon icon={faTwitter} size=\"4x\" />\n      </Logo>\n      <AuthForm />\n      <Buttons>\n        <Button onClick={onSocialClick} name=\"google\">\n          Continue with Google\n          <FontAwesomeIcon icon={faGoogle} size=\"2x\" />\n        </Button>\n        <Button onClick={onSocialClick} name=\"github\">\n          Continue with Github\n          <FontAwesomeIcon icon={faGithub} size=\"2x\" />\n        </Button>\n      </Buttons>\n    </Container>\n  );\n};\n\nexport default Auth;\n","import { FormEvent, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { authService, dbService } from \"fbase\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100%;\n  overflow-y: scroll;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\nconst Form = styled.form`\n  border: 1px solid rgb(255, 255, 255);\n  padding: 10px 5px;\n  border-radius: 20px;\n  margin-top: 20px;\n  display: flex;\n  justify-content: space-between;\n`;\nconst InputText = styled.input`\n  width: 105px;\n  cursor: text;\n  color: rgb(100, 100, 100);\n  padding: 10px;\n  font-size: 16px;\n`;\nconst Submit = styled.input`\n  border-radius: 20px;\n  background-color: #289ae2;\n  text-align: center;\n  padding: 10px;\n  margin-right: 10px;\n`;\nconst Button = styled.button`\n  padding: 10px;\n  border-radius: 20px;\n  background-color: tomato;\n  text-align: center;\n  padding: 10px;\n`;\nconst List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-top: 20px;\n`;\nconst Item = styled.li`\n  border: 1px solid rgb(255, 255, 255);\n  padding: 10px;\n  border-radius: 10px;\n  margin-bottom: 10px;\n`;\n\ninterface IProps {\n  userObj: UserObj;\n  refreshUser: () => void;\n}\n\nconst Profile = ({ userObj, refreshUser }: IProps) => {\n  const [newDisplayName, setNewDisplayName] = useState<string>(\n    userObj.displayName || \"\"\n  );\n  const [jweetList, setJweetList] = useState<JweetObj[]>([]);\n  const history = useHistory();\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const onChange = (event: FormEvent<HTMLInputElement>) => {\n    const {\n      currentTarget: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (userObj.displayName === newDisplayName) return;\n    await userObj.updateProfile(newDisplayName);\n    alert(`Your name has been changed to ${newDisplayName} :)`);\n    refreshUser();\n  };\n\n  const getMyJweets = async () => {\n    const jweets = await dbService\n      .collection(\"jweets\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\", \"desc\")\n      .get();\n    const jweetArray: JweetObj[] = [];\n    jweets.docs.forEach((doc) => {\n      jweetArray.push({ id: userObj.uid, ...doc.data() } as JweetObj);\n    });\n    setJweetList(jweetArray);\n  };\n  useEffect(() => {\n    getMyJweets();\n  }, []);\n  return (\n    <Container>\n      <Form onSubmit={onSubmit}>\n        <InputText\n          type=\"text\"\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          onChange={onChange}\n          maxLength={10}\n        />\n        <Submit type=\"submit\" value=\"Update Profile\" />\n        <Button onClick={onLogOutClick}>Log Out</Button>\n        {/* <Button onClick={onDeleteClick}>Delete My Count</Button> */}\n      </Form>\n      <List>\n        {jweetList.map((jweet, index) => (\n          <Item key={index}>{jweet.text}</Item>\n        ))}\n      </List>\n    </Container>\n  );\n};\n\nexport default Profile;\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-regular-svg-icons\";\nimport { faHouseUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Container = styled.nav``;\nconst List = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\nconst Item = styled.li`\n  font-size: 16px;\n  &:hover {\n    color: #289ae2;\n  }\n`;\nconst SLink = styled(Link)`\n  width: 90px;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  font-size: 12px;\n`;\nconst IconText = styled.span`\n  font-size: 16px;\n  margin-left: 10px;\n`;\n\ninterface IProps {\n  userObj: UserObj | null;\n}\n\nconst Navigation = ({ userObj }: IProps) => {\n  return (\n    <Container>\n      <List>\n        <Item>\n          <Link to=\"/\">\n            <FontAwesomeIcon icon={faTwitter} size=\"2x\" />\n          </Link>\n        </Item>\n        <Item>\n          <SLink to=\"/\">\n            <FontAwesomeIcon icon={faHouseUser} size=\"2x\" />\n            <IconText>Home</IconText>\n          </SLink>\n        </Item>\n        <Item>\n          <SLink to=\"/profile\">\n            <FontAwesomeIcon icon={faUser} size=\"2x\" />\n            <IconText>\n              {userObj?.displayName ? userObj.displayName : \"Profile\"}\n            </IconText>\n          </SLink>\n        </Item>\n      </List>\n    </Container>\n  );\n};\n\nexport default Navigation;\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"routes/Home\";\nimport Auth from \"routes/Auth\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"./Navigation\";\n\ninterface IProps {\n  isLoggedIn: boolean;\n  userObj: UserObj | null;\n  refreshUser: () => void;\n}\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }: IProps) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn && userObj ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </>\n        ) : (\n          <Route exact path=\"/\">\n            <Auth />\n          </Route>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst GlobalStyles = createGlobalStyle`\n\n    ${reset}\n    input, button, span{\n        all:unset;\n        cursor:pointer;\n        &::-webkit-file-upload-button {\n            all: unset;\n            width: 50px;\n            padding: 10px;\n            text-align: center;\n            color: rgb(255, 255, 255);\n            background-color: #289ae2;\n            border-radius: 20px;\n            margin-right:10px;\n        }\n    }\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        width:100%;\n        height:100vh;\n        color:rgb(250,250,250);\n        background-color:rgb(0,0,0);\n        font-family:--apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        font-weight:600;\n        display:flex;\n        justify-content:center;\n        align-items:center;\n    }\n    \n    #root{\n        padding:20px 0px;\n        width:320px;\n        height:100%;\n        /* overflow-y:scroll;\n        &::-webkit-scrollbar{\n            display:none;\n        } */\n        display:flex;\n        \n    }\n\n`;\n\nexport default GlobalStyles;\n","import { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\nimport styled from \"styled-components\";\nimport GlobalStyles from \"components/GlobalStyles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\n\nconst Container = styled.div`\n  width: 100%;\n  max-width: 320px;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n`;\nconst Footer = styled.footer`\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 30px;\n`;\nconst Loader = styled.div`\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 200px 0px;\n  color: #289ae2;\n`;\nconst App = () => {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState<UserObj | null>(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      setUserObj(\n        user\n          ? {\n              displayName: user.displayName,\n              uid: user.uid,\n              updateProfile: (displayName: string) =>\n                user.updateProfile({ displayName }),\n            }\n          : null\n      );\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    if (!user) return;\n    setUserObj({\n      displayName: user.displayName || null,\n      uid: user.uid,\n      updateProfile: (displayName: string) =>\n        user.updateProfile({ displayName }),\n    });\n  };\n  return (\n    <>\n      <Container>\n        {init ? (\n          <AppRouter\n            isLoggedIn={Boolean(userObj)}\n            userObj={userObj}\n            refreshUser={refreshUser}\n          />\n        ) : (\n          <Loader>\n            <FontAwesomeIcon icon={faTwitter} spin={true} size=\"4x\" />\n          </Loader>\n        )}\n        <Footer>&copy; {new Date().getFullYear()} Jwitter</Footer>\n      </Container>\n      <GlobalStyles />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\n// import theme from \"./theme\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}